import discord
import random
import asyncio
from datetime import datetime, timedelta

intents = discord.Intents.default()
intents.message_content = True

client = discord.Client(intents=intents)

TOKEN = "Why do you want to know?"

word_list = ["chicken", "dogs", "fried", "quarter", "xylophone"]

# Dictionary to store user data
user_data = {}

def get_display_word(word, guessed_letters):
    return " ".join([letter if letter in guessed_letters else "_" for letter in word])

async def start_new_game(user):
    word = random.choice(word_list)
    guessed_letters = set()
    next_hint_time = datetime.now() + timedelta(hours=1)
    user_data[user] = {
        "word": word,
        "guessed_letters": guessed_letters,
        "points": 0
    }
    return word

@client.event
async def on_ready():
    print(f'I... I work! Yikes...')

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    user = message.author.id

    if message.content.startswith("!start"):
        word = await start_new_game(user)
        display_word = get_display_word(word, user_data[user]["guessed_letters"])
        await message.channel.send(f"Hey, so... I guess you want to play? Word: {display_word}")
    
    elif message.content.startswith("!guess"):
        if user not in user_data:
            await message.channel.send("You haven't started a game yet! Use !start to begin.")
            return
        
        guess = message.content.split()[1]
        if len(guess) != 1 or not guess.isalpha():
            await message.channel.send("Please guess a single letter.")
            return
        
        user_info = user_data[user]
        if guess in user_info["guessed_letters"]:
            await message.channel.send("Come on... This one again? You already tried that one!")
            await message.channel.send("I'm taking away a point!")
            user_info["points"] -= 1
            await message.channel.send(f"You have {points} points.")
            return

        user_info["guessed_letters"].add(guess)
        if guess in user_info["word"]:
            user_info["points"] += user_info["word"].count(guess)
        
        display_word = get_display_word(user_info["word"], user_info["guessed_letters"])
        await message.channel.send(f"Current word: {display_word}")

    elif message.content.startswith("!points"):
        if user not in user_data:
            await message.channel.send("You haven't started a game yet! Use !start to begin.")
            return
        points = user_data[user]["points"]
        await message.channel.send(f"You have {points} points.")

    elif message.content.startswith("!erase"):
        if user not in user_data:
            await message.channel.send("You... don't even have a profile right now... Try !start to create one!")
            return
        del user_data[user]
        await message.channel.send("Your data's gone... For now")
        return

    elif message.content.startswith("!restart"):
        if user not in user_data:
            await message.channel.send("I don't even know who you are...")
            return
        await message.channel.send("I know you... But I won't and I will again, I suppose...")
        del user_data[user]
        await message.channel.send("Yeah, I don't know you...")
        word = await start_new_game(user)
        await message.channel.send("Wait I recognize you... but from where?")

    elif message.content.startswith("!hint"):
        if user not in user_data:
            await message.channel.send("You... You want a hint?)
            return

    elif message.content.startswith("Hi"):
        await message.channel.send("Hi"):

client.run(TOKEN)
